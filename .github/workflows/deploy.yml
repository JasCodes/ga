name: Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash
        run: |
          echo ::set-env name=BRANCH::$(echo "${GITHUB_REF##*/}"")
          echo ::set-env name=REPOSITORY::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          echo ::set-env name=RELEASE_BRANCH::$(echo "master")
          echo ::set-env name=PUBLISH_DIR::$(echo "public")
          echo ::set-env name=DOMAIN::$(echo "${REPOSITORY}.jas.bio" | awk -F / '{print $2}')
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # - uses: nelonoel/branch-name@v1
      # - run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
      #   shell: bash
      # - run: echo ::set-env name=PUBLISH_DIR::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
      #   shell: bash
      - run: yarn global add surge
      - name: Pull packages
        run: yarn
      - name: Build site
        run: yarn build
      - name: Deploy to surge
        if: env.BRANCH == env.RELEASE_BRANCH
        run: surge ${PUBLISH_DIR} ${DOMAIN}
        env:
          SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
      - name: Deploy to surge
        if: env.BRANCH != env.RELEASE_BRANCH
        run: surge ${PUBLISH_DIR} ${BRANCH}.${DOMAIN}
        env:
          SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
        # uses: dswistowski/surge-sh-action@v1
        # with:
        #   domain: ${DOMAIN}
        #   project: "public"
        #   login: ${{ secrets.surge_login }}
        #   token: ${{ secrets.surge_token }}
        # env:
        #   DOMAIN: "${BRANCH_NAME}.ga.jas.bio"
      # - name: Deploy
      # domain: "${BRANCH_NAME}.ga.jas.bio"
      #   if: ${BRANCH_NAME} == "master"
      #   uses: crazy-max/ghaction-github-pages@v1
      #   with:
      #     target_branch: gh-pages
      #     build_dir: public
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
